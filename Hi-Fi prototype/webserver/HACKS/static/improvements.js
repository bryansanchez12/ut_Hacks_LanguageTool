var docNames  = []
var scoreList = []
var mistakes = []
var solutions = []
var tip

$( document ).ready(function() {
    // Initialize the objects
    getScoreList()
    getMistakesList()
    //getTip(pageName)
    // Replace the objects
    // replaceTip(tip);
});

/**
 *  Function that fetches the score list in JSON format
 *  And assigns them in the variable "scoreList"
 *  Requires either: name = "Grammar", name = "Spelling",
 *      name = "Punctuation", name = "Formality", name = "Readability"
 */
function getScoreList() {
    var server = window.location.href
    var	http = new XMLHttpRequest();
    var txt = "", x;
    http.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            scores = JSON.parse(this.responseText);
            for (x in scores['scores']){
                docNames.push(scores['scores'][x].name.toString())
                scoreList.push(scores['scores'][x].value.toString())
            }
            replaceScores()
        }
    };
    http.open("GET", server + "/getScoreList" , true);
    http.send();
}

/**
 *  Function that fetches the mistakes list in JSON format
 *  And assigns them in the variable "mistakes" and "solutions"
 *  Requires either: mistake = "word", solution = "word",
 */
function getMistakesList() {
    var server = window.location.href
    var	http = new XMLHttpRequest();
    var txt = "", x;
    http.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            mistakesJSON = JSON.parse(this.responseText);
            for (x in mistakesJSON['mistakes']){
                mistakes.push(mistakesJSON['mistakes'][x].mistake.toString())
                solutions.push(mistakesJSON['mistakes'][x].solution.toString())
            }
            replaceMistakes()
        }
    };
    http.open("GET", server + "/getMistakes" , true);
    http.send();
}

/**
 *  Function that fetches the information generated by the assistant
 *  And assigns it in the variable "tip"
 *  Requires either: name = Grammar, name = Spelling,
 *      name = Punctuation, name = Formality, name = Readability
 */
function getTip(name) {
    var	http = new XMLHttpRequest();
    var txt = "", x;
    http.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            tip = this.responseText;
        }
    };
    http.open("GET", server + "/getTip/" + name, true);
    http.send();
}

/** Function that replace the default documents names and scores into the actual ones
 *  Requires:  doc1, doc2, doc3 are the names of the documents
 *           score1, score2, score3 are the corresponding values of these documents
 */
function replaceScores() {
    var cells = document.getElementById("iScores").getElementsByTagName("td");
    cells[0].innerText  = docNames[0];
    cells[1].innerText  = scoreList[0];
    cells[2].innerText  = docNames[1];
    cells[3].innerText  = scoreList[1];
    cells[4].innerText  = docNames[2]
    cells[5].innerText  = scoreList[2];
}

/** Function that replace the default tip into the actual information
 *  Requires:  tip is the information given by the assistant
 */
function replaceTip(tip) {
    document.getElementById("tip").innerText = tip;
}

/** Function that replace the content of the popup
 *  Requires:  mistakes and solutions from server
 */
function replaceMistakes() {
    html_table = "";
    index = 0;
    while (index < mistakes.length){
        html_table += "" +
            "<tr>\n" +
            "      <td>"+ mistakes[index] + "</td>\n" +
            "      <td>"+ solutions[index] + "</td>\n" +
            "</tr>"
        index += 1
    }
    document.getElementById("modal_table").innerHTML = html_table;
}

function checkAnswersGrammar(){
    var answer_Q1 = "spoke"
    var answer_Q2 = "became"
    var answer_Q3 = "had"

    var answer_Q4 = "studies"
    var answer_Q5 = "passes"
    var answer_Q6 = "flies"

    var input_Q1 = document.getElementById("Q1")
    if (input_Q1.value == answer_Q1){
        input_Q6.classList.remove("btn-danger")
        input_Q1.classList.add("btn-success");
    } else {
        input_Q6.classList.remove("btn-success")
        input_Q1.classList.add("btn-danger");
    }

    var input_Q2 = document.getElementById("Q2")
    if (input_Q2.value == answer_Q2){
        input_Q6.classList.remove("btn-danger")
        input_Q2.classList.add("btn-success");
    } else {
        input_Q6.classList.remove("btn-success")
        input_Q2.classList.add("btn-danger");
    }

    var input_Q3 = document.getElementById("Q3")
    if (input_Q3.value == answer_Q3){
        input_Q6.classList.remove("btn-danger")
        input_Q3.classList.add("btn-success");
    } else {
        input_Q6.classList.remove("btn-success")
        input_Q3.classList.add("btn-danger");
    }

    var input_Q4 = document.getElementById("Q4")
    if (input_Q4.value == answer_Q4){
        input_Q6.classList.remove("btn-danger")
        input_Q4.classList.add("btn-success");
    } else {
        input_Q6.classList.remove("btn-success")
        input_Q4.classList.add("btn-danger");
    }

    var input_Q5 = document.getElementById("Q5")
    if (input_Q5.value == answer_Q5){
        input_Q6.classList.remove("btn-danger")
        input_Q5.classList.add("btn-success");
    } else {
        input_Q6.classList.remove("btn-success")
        input_Q5.classList.add("btn-danger");
    }

    var input_Q6 = document.getElementById("Q6")
    if (input_Q6.value == answer_Q6){
        input_Q6.classList.remove("btn-danger")
        input_Q6.classList.add("btn-success");
    } else {
        input_Q6.classList.remove("btn-success")
        input_Q6.classList.add("btn-danger");
    }
}

function checkAnswersSpelling(){
    var answer_Q1 = "3"
    var answer_Q2 = "1"
    var answer_Q3 = "2"
    var answer_Q4 = "1"
    var answer_Q5 = "3"
    var answer_Q6 = "1"

    var selected_Q1 = document.getElementById("Q1")
    if (selected_Q1.value === answer_Q1){
        selected_Q1.classList.remove("btn-danger")
        selected_Q1.classList.add("btn-success");
    } else {
        selected_Q1.classList.remove("btn-success")
        selected_Q1.classList.add("btn-danger");
    }

    var selected_Q2 = document.getElementById("Q2")
    if (selected_Q2.value === answer_Q2){
        selected_Q2.classList.remove("btn-danger")
        selected_Q2.classList.add("btn-success");
    } else {
        selected_Q2.classList.remove("btn-success")
        selected_Q2.classList.add("btn-danger");
    }

    var selected_Q3 = document.getElementById("Q3")
    if (selected_Q3.value === answer_Q3){
        selected_Q3.classList.remove("btn-danger")
        selected_Q3.classList.add("btn-success");
    } else {
        selected_Q3.classList.remove("btn-success")
        selected_Q3.classList.add("btn-danger");
    }

    var selected_Q4 = document.getElementById("Q4")
    if (selected_Q4.value === answer_Q4){
        selected_Q4.classList.remove("btn-danger")
        selected_Q4.classList.add("btn-success");
    } else {
        selected_Q4.classList.remove("btn-success")
        selected_Q4.classList.add("btn-danger");
    }

    var selected_Q5 = document.getElementById("Q5")
    if (selected_Q5.value === answer_Q5){
        selected_Q5.classList.remove("btn-danger")
        selected_Q5.classList.add("btn-success");
    } else {
        selected_Q5.classList.remove("btn-success")
        selected_Q5.classList.add("btn-danger");
    }

    var selected_Q6 = document.getElementById("Q6")
    if (selected_Q6.value === answer_Q6){
        selected_Q6.classList.remove("btn-danger")
        selected_Q6.classList.add("btn-success");
    } else {
        selected_Q6.classList.remove("btn-success")
        selected_Q6.classList.add("btn-danger");
    }
}